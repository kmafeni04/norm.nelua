local norm = require "norm"

local ok, db, err = norm.connect.sqlite(":memory:")

assert(ok, err)

local ok, err = db:query([[
  CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT NOT NULL UNIQUE,
    fav_num INTEGER NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
]])

assert(ok, err)

local ok, err = db:query([[
INSERT INTO users (name, email, fav_num) VALUES
('Alice', 'alice@example.com', 10),
('Bob', 'bob@example.com', 10);
]])

assert(ok, err)

local ok, Users, err = db:model("users")

assert(ok, err)

local query: hashmap(string, string)
query["name"] = "Alice"

local ok, user, err = Users:find(query)

assert(ok, err)

print(user["name"])

local ok, user, err = Users:find("name = 'Bob'")

assert(ok, err)

print(user["name"])

local query: hashmap(string, string)
query["fav_num"] = "10"
local ok, users, err = Users:find_all(query)

assert(ok, err)

for i, v in ipairs(users) do
  print(v["name"])
end

local ok, users, err = Users:find_all("fav_num = '10'")

assert(ok, err)

for i, v in ipairs(users) do
  print(v["name"])
end
